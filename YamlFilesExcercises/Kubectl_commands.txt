Kebernetes Command :-

1. kubecetl get pods                       				  -- This will let us know the number of pods running and its detail

2. kubectl describe pods my-pod					          -- This will give you indetail description of a pod.

3. kubectl get replicaset						  -- To get the details of replicaset.

3. Kubectl describe replicaset myapp-replicaset    			  -- You can check events in detail for a given replicaset and help in troubleshooting.

4. kubectl edit replicaset myapp-replicaset				  -- This would open the yaml filee to be edited during runtime. Delete pods and new pods will be created with new configurations.

5. kubectl scale replicaset myapp-replicaset --replicas=2        	  -- This command will ensure that desired pods running is 2.


6. kubectl create -f deployment-definition.yaml                            -- Command to create deployment through yaml file

7. kubectl get deployments						  -- Command to get the details of all deployments.


8. kubectl get replicaset     (k get rs)                         			  -- By Default when a deployment is created, a replicaset is created as well, you can check the same  by this command

									 
9. kubectl get pods         (k get po)                  				-- Number of pods created by deployment


10.  kubectl get all		(k get all)					  -- To list down all the objects created.

Rollout:-

11. kubectl rollout status deployment/myapp-deployment			-- Command to check the status of the deployment named myapp-deplyment.


12.  kubectl rollout history deployment/myapp-deployment     		-- command to check the history of rollout of given deployment named myapp-deployment. Deployment strategy  --- Recreate and rolling updates, rolling update is the default deployment strategy.


14. Change the deployment-definition file with the neccassary changes and run below command to implement change :-         kubectl apply -f deployment-definition.yaml


15.  kubectl set image deployment/myapp-deployment nginx=nginx:1.9.1      -- This command will change the image version and rollout the changes in pods but definition file  will not have the latest change.


16. kubectl rollout undo deployment/myapp-deployment                       -- This command will undo the changes in previos deployment.


17.  kubectl run nginx --image=nginx					-- Kubectl run commmand creates tthe deployment named nginx, this is another metho to create deploym										ent with just images. Replicasets and pods are created automatically.

18.  kubectl create -f deployment.yaml --record                       --- This record command at the end records the history of rollout


19.  kubectl set image deployment myapp-deployment nginx=nginx:1.18-perl --record           -- This command can be used instead of kubectl edit deployment command, where you edit the temperory yaml file created by k8s to apply new deployment as mentioned in command 20.


20.  kubectl edit deployment myapp-deployment --record                         >> This command will open the temperory file to make the changes which you can save and it will be applied automatically to the exiing resources. Please note the definition file of deployment does not change in this case.


21.  kubectl describe deployments <deployment-name> | grep -i image       --- This command will show the image used in the given deployment-name.



22. kubectl get ns --no-headers  | wc -l                                   --- Command to get the number of namespaces present



23. kubect -n <namespace-name> get pods                                    -- Command to get pods details in a give namespace with name <namespace-name>


24. kubectl get pods --all-namespaces  |  grep <pod-name>                  -- Command to find  a pod from all the namespaces present.




================Commands for the Voting Application =================

1. kubectl create -f voting-app-pod.yaml

2. kubectl create -f voting-app-service.yaml

3. kubectl get pod,svc                                             --- Command to check both the pods and services status at a time, which were created in step 1 and 2. Similarly create all the other pods and services through the definition yaml file.

4. minikube service voting-service -url				   --- Command to get the url of service , if you are running k8s through minikube


================= Commands===========================================

1. Command to check which user created the metioned pod :-

kubectl exec <pod-name> whoami


2. Command to label a node

kubectl label node <node-name> <key>=<value>
==================Ingress Module Commands===============================

1.  kubectl get deploy --all-namespaces


2.  kubectl -n <namespace-name>  delete ingress <ingress-name>       --- To delete the current ingress

3.  kubctl apply -f <ingress-file>.yaml                              -- to recreate the ingress

